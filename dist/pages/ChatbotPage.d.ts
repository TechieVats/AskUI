import { Page, Locator } from '@playwright/test';
export declare class ChatbotPage {
    readonly page: Page;
    readonly inputBox: Locator;
    readonly sendButton: Locator;
    readonly messagesContainer: Locator;
    readonly botMessage: Locator;
    readonly userMessage: Locator;
    readonly errorMessage: Locator;
    readonly newChatButton: Locator;
    readonly languageSelector: Locator;
    readonly disclaimerAcceptButton: Locator;
    readonly disclaimerContent: Locator;
    readonly messageText: Locator;
    readonly messageFooter: Locator;
    readonly copyButton: Locator;
    readonly likeButton: Locator;
    readonly dislikeButton: Locator;
    readonly searchResultsButton: Locator;
    readonly translateButton: Locator;
    readonly stopGeneratingButton: Locator;
    readonly predictionsContainer: Locator;
    readonly predictionButtons: Locator;
    readonly searchResultLink: Locator;
    constructor(page: Page);
    navigate(): Promise<void>;
    handleDisclaimer(): Promise<void>;
    waitForChatToLoad(): Promise<void>;
    sendMessage(message: string): Promise<void>;
    getLastBotResponse(): Promise<Locator>;
    getLastBotMessageText(): Promise<string | null>;
    getLastUserMessage(): Promise<Locator>;
    getLastUserMessageText(): Promise<string | null>;
    isMessageVisible(message: string): Promise<boolean>;
    isInputCleared(): Promise<boolean>;
    switchLanguage(language: 'en' | 'ar'): Promise<void>;
    startNewChat(): Promise<void>;
    copyLastMessage(): Promise<void>;
    rateLastMessage(isHelpful: boolean): Promise<void>;
    showSearchResults(): Promise<void>;
    translateLastMessage(): Promise<void>;
    stopGenerating(): Promise<void>;
    clickPrediction(index: number): Promise<void>;
    getSearchResultLink(): Promise<Locator>;
    getMessageDateTime(): Promise<string | null>;
    getLastMessage(): Promise<Locator>;
}
